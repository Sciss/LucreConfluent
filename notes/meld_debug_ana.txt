:::::::: 0 ::::::::
0 = access

:::::::: 1 ::::::::

cell_a1: 1 (int 2, next 3) -> cell_2
cell_b2: 4 (int 5, next 6) -> cell_3
cell_c3: 7 (int 8, next 9)
cell_d4: 10 (int 11 next 12) -> cell_5
cell_e5: 13 (int 14 next 15) -> cell_6
cell_f6: 16 (int 17 next 18)

// [ a b c ], [ d e f ]
iterate(i1 = 0, j1 = 1, split1 = 1, i2 = 0, j2 = 1, split2 = 2)

:::::::: 2 ::::::::

crossover(i1, j1, split1)

fork from <0,1>

a -> e (<1,1>) for < 3 @ 1,2>
d -> b (<1,1>) for <12 @ 1,2>

:::::::: 3 ::::::::

crossover(i2, j2, split2)

fork from <0,1>

b -> f (<1,1>) for < 3 @ 1,3>
e -> c (<1,1>) for <12 @ 1,3>

:::::::: 4 ::::::::

meld - new tree 4

toList ok

// [ a e f ], [ d b c ], [ a b f ], [ d e c ]
iterate(i1 = 2, j1 = 0, split1 = 1, i2 = 2, j2 = 0, split2 = 1)

::::::::::::::::::::::::::::::::::::::::::::: iter2

:::::::: 5 ::::::::

crossover(i1, j1, split1)

fork from <0,1,4,4>

:::::::: 6 ::::::::

crossover(i2, j2, split2)

fork from <0,1,4,4>

